# mainコンテキスト

# プロセスを起動するユーザーの設定
user nginx;

# workerの数を指定
# workerはnginxが起動すると起動するプロセスの一つ。「nginx」や「www」といった名前の一般ユーザーで起動している。
# workerはネットワーク処理のイベントループを処理し、masterが待ち受けを設定したソケットを使って接続を受け付け、ネットワークやファイルI/Oを実施します。
# HTTPやSSL/TLSのプロトコル処理をするのもworkerの仕事
worker_processes 1;

# エラーログの出力先とログレベルを設定
# この設定ではログレベルがwarn以上のログが記録される
error_log /var/log/nginx/error.log warn;

# プロセスIDを格納するファイルの設定
pid /var/run/nginx.pid;

# eventsコンテキスト
events {
  # １つのworkerプロセスに対する同時接続数の最大値を指定
  # クライアントからの接続だけではなくバックエンドへの接続も含んでおり、
  # リバースプロキシ を設定した場合は一つのアクセスで二つの接続を消費する。 eventsコンテキストに記述する
  worker_connections 1024;
}

# httpコンテキスト
# Webサーバー全体の設定を記述する。
# ここで様々なバーチャルホストに共通の設定を書く。バーチャルホストごとの設定が最小限で済む
http {
  # HTTPレスポンスヘッダのServerにnginxのバージョンを入れるか
  server_tokens off;

  # https://qiita.com/cubicdaiya/items/d938f3354f424830630b
  # p78
  # 特定の変数の値を別の変数の値に応じて設定できる機能です
  map \$http_cloudfront_forwarded_proto \$real_ip_temp {
    ~http?   \$http_x_forwarded_for;
    default '\$http_x_forwarded_for, dummy';
  }

  # includeディレクティブを利用すると別の設定ファイルを読み込むことができる。p48
  # HTTPのContent-Type:ヘッダの設定 mime.typesファイルを読み込む
  # 定義されていない場合は「application/octet-stream」を設定
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  # log_formatで、Apacheに似た形式のログフォーマットをmainという名前で定義している。
  # 第1引数の名前で、第2引数以降の複数の引数を一つにまとめてログフォーマットとして定義
  log_format main '\$real_ip - \$remote_user [\$time_local] "\$request" '
                  '\$status \$body_bytes_sent "\$http_referer" '
                  '"\$http_user_agent" "\$forwarded_for"';

  # アクセスログの出力先ファイル名と、出力形式として直前のlog_formatで定義したmain形式を指定している。
  # 出力形式を指定しない場合はconbinedという形式が使われる。
  access_log /var/log/nginx/access.log main;

  # ファイルの送信する方法を示すディレクティブ p205
  # ファイルの中身をネットワークに転送するシステムコール
  sendfile on;
  keepalive_timeout 65;

  proxy_buffer_size 32k;
  proxy_buffers 50 32k;
  proxy_busy_buffers_size 32k;

  # includeディレクティブを利用すると別の設定ファイルを読み込むことができる。p48
  # 読み込まれる設定ファイルには、serverコンテキストが書かれており、ポート番号や使用するインターフェイス、ホスト名と
  # いったパラメーターを設定するディレクティブを記述する、バーチャルホストの設定が記述される。
  include /etc/nginx/conf.d/*.conf;
}
